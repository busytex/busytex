name: bench-native

on: 
  workflow_dispatch:
    inputs:
      busytexreleasetag:
        description: 'busytex release tag'
        required: false
        default: 'build_native_418c9bc5edfd99fdb560cff956d3f10d3e598bcf_6949768401_1'

env:
  MAKE_PARALLELISM: -j2
  BENCHSETURLS: https://github.com/busytex/busytex/releases/download/tectonicbenchset/arXiv_src_1702_001.tar

jobs:

  bench-native:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Download native binaries
        run:  make URLRELEASE=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/${{ github.event.inputs.busytexreleasetag }} download-native
      
      - name: Smoke native
        run:  make smoke-native
      
      - name: Test native 
        run: |
            make source/texmfrepo.txt
            make build/texlive-basic.txt
            make dist-native
            sh example/example.sh

      - name: Download benchset
        run: | 
          wget ${{env.BENCHSETURLS}}
          mkdir -p ./benchset/ ./benchset/tar
          tar -xf arXiv_src_1702_001.tar --directory ./benchset/
          for f in ./benchset/1702/1702.0031*.gz; do tar -xf $f --directory=./benchset/tar; done
          find ./benchset/tar

#      - name: Install TexLive
#        env:
#            MAKEFLAGS: ${{env.MAKE_PARALLELISM}}
#        run: make build/texlive-basic.txt build/texlive-full.txt
#      - name: Archive artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: build
#          path: build/native/busytex
#      - name: Archive native artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: native_build
#          path: |
#            build/texlive-basic/
#            build/native/busytex
#      - name: Create Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: chown $(whoami) -R . && gh --version && gh release create build_wasm_${{github.sha}}_${{ github.run_id }}_${{ github.run_attempt }} -t "Wasm assets" busytex_pipeline.js busytex_worker.js build/versions.txt build/wasm/busytex.js build/wasm/busytex.wasm  source/texmfrepo.txt build/texlive-basic/texmf-dist/dvipdfmx/dvipdfmx.cfg build/texlive-basic/texmf-dist/web2c/texmf.cnf build/texlive-basic/texmf-dist/web2c/updmap.cfg build/texlive-basic.profile build/texlive-basic.tar.gz build/texlive-basic.txt  build/wasm/texlive-basic.js build/wasm/texlive-basic.data build/wasm/texlive-basic.js.providespackage.txt build/texlive-full.txt build/texlive-full.profile $(printf "build/wasm/ubuntu-%s.js " $UBUNTUPACKAGES) $(printf "build/wasm/ubuntu-%s.data " $UBUNTUPACKAGES) $(printf "build/wasm/ubuntu-%s.js.skip.txt " $UBUNTUPACKAGES) $(printf "build/wasm/ubuntu-%s.js.good.txt " $UBUNTUPACKAGES) $(printf "build/wasm/ubuntu-%s.js.providespackage.txt " $UBUNTUPACKAGES) $(printf "build/wasm/ubuntu-%s.js.ubuntu.txt " $UBUNTUPACKAGES)
