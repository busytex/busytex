name: build-native
on: workflow_dispatch

env:
  MAKE_PARALLELISM: -j2
  TEXBIN: ctangle otangle tangle tangleboot ctangleboot tie web2c/fixwrites web2c/makecpool web2c/splitup web2c/web2c

jobs:

  build-native:
    runs-on: ubuntu-22.04
    container: alpine:3.18.3
    steps:
      - name: Install Prerequisites including github.com/cli/cli
        #run: sudo apt-get install xz-utils strace cmake unzip gh gperf
        run: apk add --update --no-cache libnsl libnsl-dev build-base coreutils cmake git xz wget perl gperf p7zip python3 github-cli   strace && ln -sf python3 /usr/bin/python

      - uses: actions/checkout@v4
            
      - name: Clone TexLive and dependencies
        run:  make source/texlive.downloaded build/versions.txt

      - name: Build native busytex
        env:
            MAKEFLAGS: ${{env.MAKE_PARALLELISM}}
        run:  make native
      
      - name: Smoke native
        run:  make smoke-native
        
#      - name: Archive artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: build
#          path: build/native/busytex

      - name: Test native 
        run: |
            make source/texmfrepo.txt
            make build/texlive-basic.txt
            python busypack.py -i build/textlive-basic/  -o texlive-basic.h --prefix /opt/texlive --ld ld --skip '\.a|\.so|\.pod|\.ld|\.h'
            make dist-native
            sh example/example.sh pdflatex

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: chown $(whoami) -R . && gh --version && gh release create build_native_${{github.sha}}_${{ github.run_id }}_${{ github.run_attempt }} -t "Native assets" build/versions.txt build/native/fonts.conf build/native/busytex build/native/busytex.tar $(printf "build/native/texlive/texk/web2c/%s " $TEXBIN) build/texlive-basic.tar.gz texlive-basic.h
