name: build-cosmo
on:
  workflow_dispatch:
    inputs:
      tmate_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (to interactively debug weird errors)'
        required: false
        default: false

env:
  MAKE_PARALLELISM: -j2
  TEXBIN: ctangle otangle tangle tangleboot ctangleboot tie web2c/fixwrites web2c/makecpool web2c/splitup web2c/web2c

jobs:
  build-cosmo:
    runs-on: ubuntu-22.04
    steps:
      - name: Disable binfmt_misc shenanigans (https://github.com/jart/cosmopolitan/tree/master/tool/cosmocc#gotchas)
        run: |
             sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
             sudo chmod +x /usr/bin/ape
             sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"
             sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"

      - uses: actions/checkout@v4

      - name:  Download and unpack Cosmo toolchain
        run: |
             curl -OL https://github.com/dfyz/cosmopolitan/releases/download/cosmocc_b5e622e7692a959ea021d95451ff155f84518b0a_7922511901_1/cosmocc.zip
             unzip -d cosmocc/ cosmocc.zip

      - name: Set environment for Cosmo toolchain (https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable)
        run: |
             echo "CC=$(command -v cosmocc/bin/cosmocc)" >> "$GITHUB_ENV"
             echo "CXX=$(command -v cosmocc/bin/cosmoc++)" >> "$GITHUB_ENV"
             echo "AR=$(command -v cosmocc/bin/cosmoar)" >> "$GITHUB_ENV"
             echo "INSTALL=$(command -v cosmocc/bin/cosmoinstall)" >> "$GITHUB_ENV"

      - name: Clone TexLive and dependencies
        run:  make source/texlive.downloaded build/versions.txt

      - name: Build native busytex with Cosmo
        env:
            MAKEFLAGS: ${{env.MAKE_PARALLELISM}}
        run:  make native

      - name: Run a debugging tmate sesion if the build failed
        uses: mxschmitt/action-tmate@v3
        if: ${{github.event_name == 'workflow_dispatch' && inputs.tmate_enabled && failure()}}

      - name: Smoke native
        run:  make smoke-native

      - name: Test native
        run: |
            make source/texmfrepo.txt
            make build/texlive-basic.txt
            make dist-native
            sh example/example.sh
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: chown $(whoami) -R . && gh --version && gh release create build_native_${{github.sha}}_${{ github.run_id }}_${{ github.run_attempt }} -t "Cosmo assets" build/versions.txt build/native/fonts.conf build/native/busytex build/native/busytex.tar $(printf "build/native/texlive/texk/web2c/%s " $TEXBIN) build/texlive-basic.tar.gz
