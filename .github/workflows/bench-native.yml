name: bench-native

on: 
  workflow_dispatch:
    inputs:
      busytexcosmoreleasetag:
        description: 'busytex cosmo release tag'
        required: false
        default: 'build_native_c88efc04ba7f3b04c8d0c32d646646a39791e689_8031878137_1'
      busytexnativereleasetag:
        description: 'busytex native release tag'
        required: false
        default: 'build_native_418c9bc5edfd99fdb560cff956d3f10d3e598bcf_6949768401_1'

env:
  BENCHSETURLS: https://github.com/busytex/busytex/releases/download/tectonicbenchset/arXiv_src_1702_001.tar

jobs:

  bench-native:
    runs-on: ubuntu-22.04
    steps:
      - name: Disable binfmt_misc shenanigans (https://github.com/jart/cosmopolitan/tree/master/tool/cosmocc#gotchas)
        run: |
             sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
             sudo chmod +x /usr/bin/ape
             sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"
             sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"

      - uses: actions/checkout@v4
      
      - name: Download native binaries
        run:  make URLRELEASE=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/${{ github.event.inputs.busytexnativereleasetag }} download-native
      
      - name: Install native
        run: |
            make source/texmfrepo.txt
            make build/texlive-full.txt 
            make dist-native-full
            sh example/example.sh
            rm -rf source/texmfrepo

      - name: Download benchset
        run: wget ${{env.BENCHSETURLS}}

      - name: Bench native
        run: |
            for driver in pdflatex ; do
                mkdir -p tmp logs_cosmo$driver
                #tar -tf ./arXiv_src_1702_001.tar | grep '.gz' | xargs -I '{}' python busytexmk.py --driver $driver --input-tar ./arXiv_src_1702_001.tar --input-gz {} --bibtex --DIST ./dist-native --busytex ./dist-native/busytex --input-dir ./tmp/{} --log ./tmp/{}/busytexmk.log > bench.log
                python busytexmk.py --driver $driver --input-tar ./arXiv_src_1702_001.tar --bibtex --DIST ./dist-native --busytex ./dist-native/busytex --tmp-dir=./tmp/ --logall=bench.log
                python busytexmk.py --tmp-dir=./tmp/ --log-ok-dir=OK --log-fail-dir=FAIL --logall=bench.log 
                mv OK FAIL bench.log logs_cosmo$driver
                rm -rf tmp
            done
      
#      - name: Download cosmo binaries
#        run:  |
#            mv logs_cosmopdflatex logs_nativepdflatex && mv logs_cosmoxelatex logs_nativexelatex
#            rm -rf ./dist-native
#            make URLRELEASE=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/${{ github.event.inputs.busytexcosmoreleasetag }} download-native
#            make dist-native-full
#            sh example/example.sh
#      
#      - name: Bench cosmo
#        run: |
#            for driver in pdflatex xelatex; do
#                mkdir -p OK FAIL tmp logs_cosmo$driver
#                tar -tf ./arXiv_src_1702_001.tar | grep '.gz' | xargs -I '{}' python busytexmk.py --driver $driver --input-tar ./arXiv_src_1702_001.tar --input-gz {} --bibtex --DIST ./dist-native --busytex ./dist-native/busytex --input-dir ./tmp/{} --log ./tmp/{}/busytexmk.log > bench.log
#                grep   OK bench.log | while read dirname rest; do cp $dirname/busytexmk.log   OK/$(basename $dirname)_busytexmk.log; done
#                grep FAIL bench.log | while read dirname rest; do cp $dirname/busytexmk.log FAIL/$(basename $dirname)_busytexmk.log; done
#                echo TOTAL: $(wc -l bench.log) OK: $(grep OK bench.log | wc -l) FAIL: $(grep FAIL bench.log | wc -l)
#                mv OK FAIL bench.log logs_cosmo$driver
#                python busytexmk.py | while read err; do echo $err : $(find tmp -name busytexmk.log -exec grep -a "$err" {} ';' | wc -l); done
#                find tmp -name busytexmk.log -exec grep -a "LaTeX Error" {} ';' | sort
#                find tmp -name busytexmk.log -exec grep -a ":fatal:" {} ';' | sort
#                find tmp -name busytexmk.log -exec grep -a "Filtering file via command" {} ';' | sort
#                find tmp -name busytexmk.log -exec grep -a "kpathsea: Running" {} ';' | sort
#                rm -rf tmp
#            done
#      
#      - name: Archive logs
#        uses: actions/upload-artifact@v4
#        with:
#          name: logs
#          path: |
#            logs_nativexelatex/
#            logs_nativepdflatex/
#            logs_cosmoxelatex/
#            logs_cosmopdflatex/
